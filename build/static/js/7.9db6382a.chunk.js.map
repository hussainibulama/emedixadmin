{"version":3,"sources":["dashboard/errmessage.js","dashboard/goodmessage.js","App/components/MainCard.js","../node_modules/react-bootstrap/es/Table.js","../node_modules/react-bootstrap/es/InputGroup.js","Demo/Product/Add.js","Demo/Product/image.js","Demo/Product/Default.js"],"names":["Error","props","className","col","msg","Good","icon","faCheckCircle","MainCard","state","isOption","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","Component","windowSize","Table","_React$Component","apply","arguments","_inheritsLoose","prototype","render","_this$props","bsPrefix","striped","bordered","hover","size","variant","responsive","_objectWithoutPropertiesLoose","classes","classNames","table","React","createElement","_extends","responsiveClass","createBootstrapComponent","InputGroup","defaultProps","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","DecoratedInputGroup","Text","Radio","type","Checkbox","Append","Prepend","BasicButton","handleChange","e","preventDefault","target","name","value","p_title","p_description","p_price","p_cprice","p_cpu","p_sku","p_quantity","p_status","p_category","error","errmsg","good","loading","gmsg","update_id","updateneed","results","resultss","instance","post","p_id","res","data","result","console","log","store_id","localStorage","getItem","success","resetForm","fontSize","color","faArrowLeft","lineHeight","marginLeft","head","md","onSubmit","handleSubmit","Group","controlId","Label","Control","onChange","placeholder","rows","defaultValue","map","index","faSpinner","spin","updateProduct","handleFullName","addProduct","singleFileChangedHandler","event","selectedFile","files","singleFileUploadHandler","FormData","append","instances","headers","boundary","_boundary","then","response","status","refresh","catch","Row","Col","Card","Form","scope","src","image_link","alt","deleteRecord","faTrashAlt","viewer","view","delete_id","length","update","to","textAlign","float","alignItems","justifyContent","display","createAdd","editRecord","faEdit","upLoad","faPhotoVideo","Add","goBack","faTags","document"],"mappings":"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","file":"static/js/7.9db6382a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\n\nconst Error = (props) => {\n  return (\n    <div className=\"errormessage\">\n      <Grid>\n        <Cell col={2}>\n          <div className=\"center\">\n            <div className=\"errcircle\">!</div>\n          </div>\n        </Cell>\n        <Cell col={10}>\n          <p>{props.msg}</p>\n        </Cell>\n      </Grid>\n    </div>\n  );\n};\nexport default Error;\n","import React from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Good = (props) => {\n  return (\n    <div className=\"goodmessage\">\n      <Grid>\n        <Cell col={2}>\n          <div className=\"center\">\n            <div className=\"goodcircle\">\n              <FontAwesomeIcon icon={faCheckCircle} />\n            </div>\n          </div>\n        </Cell>\n        <Cell col={10}>\n          <p>{props.msg}</p>\n        </Cell>\n      </Grid>\n    </div>\n  );\n};\nexport default Good;\n","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Table, _React$Component);\n\n  function Table() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Table.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        striped = _this$props.striped,\n        bordered = _this$props.bordered,\n        hover = _this$props.hover,\n        size = _this$props.size,\n        variant = _this$props.variant,\n        responsive = _this$props.responsive,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n    var classes = classNames(bsPrefix, className, variant && bsPrefix + \"-\" + variant, size && bsPrefix + \"-\" + size, striped && bsPrefix + \"-striped\", bordered && bsPrefix + \"-bordered\", hover && bsPrefix + \"-hover\");\n    var table = React.createElement(\"table\", _extends({}, props, {\n      className: classes\n    }));\n\n    if (responsive) {\n      var responsiveClass = bsPrefix + \"-responsive\";\n\n      if (typeof responsive === 'string') {\n        responsiveClass = responsiveClass + \"-\" + responsive;\n      }\n\n      return React.createElement(\"div\", {\n        className: responsiveClass\n      }, table);\n    }\n\n    return table;\n  };\n\n  return Table;\n}(React.Component);\n\nexport default createBootstrapComponent(Table, 'table');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './utils/createWithBsPrefix';\nimport { createBootstrapComponent } from './ThemeProvider';\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\n\nvar InputGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputGroup, _React$Component);\n\n  function InputGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = InputGroup.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        size = _this$props.size,\n        className = _this$props.className,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n    }));\n  };\n\n  return InputGroup;\n}(React.Component);\n\nInputGroup.defaultProps = {\n  as: 'div'\n};\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nvar DecoratedInputGroup = createBootstrapComponent(InputGroup, 'input-group');\nDecoratedInputGroup.Text = InputGroupText;\nDecoratedInputGroup.Radio = InputGroupRadio;\nDecoratedInputGroup.Checkbox = InputGroupCheckbox;\nDecoratedInputGroup.Append = InputGroupAppend;\nDecoratedInputGroup.Prepend = InputGroupPrepend;\nexport default DecoratedInputGroup;","import React from \"react\";\nimport { Row, Col, Form, FormControl, InputGroup } from \"react-bootstrap\";\nimport Error from \"../../dashboard/errmessage\";\nimport Good from \"../../dashboard/goodmessage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Buttons from \"../../dashboard/otherbutton\";\nimport { faArrowLeft, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport instance from \"../../authaxios\";\nimport Aux from \"../../hoc/_Aux\";\nimport Card from \"../../App/components/MainCard\";\nimport { Link } from \"react-router-dom\";\n\nclass BasicButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      p_title: \"\",\n      p_description: \"\",\n      p_price: \"\",\n      p_cprice: \"\",\n      p_cpu: \"\",\n      p_sku: \"\",\n      p_quantity: \"\",\n      p_status: \"\",\n      p_category: \"\",\n      error: false,\n      errmsg: null,\n      good: false,\n      loading: false,\n      gmsg: null,\n      update_id: props.update_id,\n      updateneed: props.updateneed,\n\n      results: [],\n      resultss: [],\n    };\n  }\n\n  async componentDidMount() {\n    if (this.state.updateneed) {\n      try {\n        let res = await instance.post(\"/selectsproduct\", {\n          p_id: this.state.update_id,\n        });\n\n        let result = await res.data;\n\n        this.setState({\n          p_title: result.p_title,\n          p_description: result.p_description,\n          p_price: result.p_price,\n          p_cprice: result.p_cprice,\n          p_cpu: result.p_cpu,\n          p_sku: result.p_sku,\n          p_quantity: result.p_quantity,\n          p_status: result.p_status,\n          p_category: result.p_category,\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    try {\n      let store_id = localStorage.getItem(\"store_id\");\n      let res = await instance.post(\"/selectcategory\", {\n        store_id: store_id,\n      });\n\n      const resultss = await res.data;\n      this.setState({ resultss });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  async addProduct() {\n    this.setState({ loading: true });\n    if (\n      this.state.p_title !== \"\" &&\n      this.state.p_description !== \"\" &&\n      this.state.p_price !== \"\" &&\n      this.state.p_quantity !== \"\" &&\n      this.state.p_status !== \"\"\n    ) {\n      try {\n        let store_id = localStorage.getItem(\"store_id\");\n        let res = await instance.post(\"/addproduct\", {\n          store_id: store_id,\n          p_title: this.state.p_title,\n          p_description: this.state.p_description,\n          p_price: this.state.p_price,\n          p_cprice: this.state.p_cprice,\n          p_cpu: this.state.p_cpu,\n          p_sku: this.state.p_sku,\n          p_quantity: this.state.p_quantity,\n          p_status: this.state.p_status,\n          p_category: this.state.p_category,\n        });\n\n        let result = await res.data;\n\n        if (result && result.success) {\n          this.setState({ loading: false });\n          this.resetForm();\n          this.setState({ gmsg: result.msg });\n          this.setState({ good: true });\n          this.setState({ error: false });\n        } else if (result && result.success === false) {\n          this.setState({ loading: false });\n          this.setState({ errmsg: result.msg });\n          this.setState({ error: true });\n          this.setState({ good: false });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      this.setState({ loading: false });\n      this.setState({ errmsg: \"Please Fill out your form Correctly\" });\n      this.setState({ error: true });\n    }\n  }\n  async updateProduct() {\n    this.setState({ loading: true });\n\n    try {\n      let res = await instance.post(\"/updateproduct\", {\n        p_id: this.state.update_id,\n        p_title: this.state.p_title,\n        p_description: this.state.p_description,\n        p_price: this.state.p_price,\n        p_cprice: this.state.p_cprice,\n        p_cpu: this.state.p_cpu,\n        p_sku: this.state.p_sku,\n        p_quantity: this.state.p_quantity,\n        p_status: this.state.p_status,\n        p_category: this.state.p_category,\n      });\n\n      let result = await res.data;\n\n      if (result && result.success) {\n        this.setState({ loading: false });\n\n        this.setState({ gmsg: result.msg });\n        this.setState({ good: true });\n        this.setState({ error: false });\n      } else if (result && result.success === false) {\n        this.setState({ loading: false });\n        this.setState({ errmsg: result.msg });\n        this.setState({ error: true });\n        this.setState({ good: false });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  resetForm() {\n    this.setState({\n      p_title: \"\",\n      p_description: \"\",\n      p_price: \"\",\n      p_cprice: \"\",\n      p_cpu: \"\",\n      p_sku: \"\",\n      p_quantity: \"\",\n      p_status: \"\",\n    });\n  }\n  handleChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n  render() {\n    const { loading, updateneed, errmsg, error, good, gmsg } = this.state;\n    return (\n      <Aux>\n        <Row>\n          <Col>\n            <Card\n              title={\n                <div className=\"scaleto\">\n                  <div className=\"backer\">\n                    <Link onClick={this.props.onClick}>\n                      <FontAwesomeIcon\n                        style={{ fontSize: \"20px\", color: \"#000000\" }}\n                        icon={faArrowLeft}\n                      />\n                    </Link>\n                  </div>{\" \"}\n                  <div style={{ lineHeight: \"30px\", marginLeft: \"10px\" }}>\n                    {\" \"}\n                    {this.props.head}\n                  </div>\n                </div>\n              }\n            >\n              {error && <Error msg={errmsg} />}\n              {good && <Good msg={gmsg} />}\n              <Row>\n                <Col md={8}>\n                  <Form onSubmit={this.handleSubmit}>\n                    <div className=\"smallcards\">\n                      <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"p_title\"\n                          value={this.state.p_title ? this.state.p_title : \"\"}\n                          onChange={this.handleChange}\n                          placeholder=\"Long Sleeve T shirt\"\n                        />\n                      </Form.Group>\n\n                      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>\n                          Description{\" \"}\n                          <small>\n                            This box only accept text or coma (,), all other\n                            punctuations are not accepted{\" \"}\n                          </small>\n                        </Form.Label>\n                        <Form.Control\n                          name=\"p_description\"\n                          value={\n                            this.state.p_description\n                              ? this.state.p_description\n                              : \"\"\n                          }\n                          onChange={this.handleChange}\n                          as=\"textarea\"\n                          rows=\"10\"\n                        />\n                      </Form.Group>\n                    </div>\n\n                    <div className=\"smallcards\">\n                      <h5>Pricing</h5>\n                      <Row>\n                        <Col md={6}>\n                          <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Price</Form.Label>\n                            <InputGroup className=\"mb-3\">\n                              <InputGroup.Prepend>\n                                <InputGroup.Text>&#8358;</InputGroup.Text>\n                              </InputGroup.Prepend>\n                              <FormControl\n                                name=\"p_price\"\n                                value={\n                                  this.state.p_price ? this.state.p_price : \"\"\n                                }\n                                onChange={this.handleChange}\n                              />\n                              <InputGroup.Append>\n                                <InputGroup.Text>.00</InputGroup.Text>\n                              </InputGroup.Append>\n                            </InputGroup>\n                          </Form.Group>\n                        </Col>\n\n                        <Col md={6}>\n                          <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Compare Price (Promo)</Form.Label>\n                            <InputGroup className=\"mb-3\">\n                              <InputGroup.Prepend>\n                                <InputGroup.Text>&#8358;</InputGroup.Text>\n                              </InputGroup.Prepend>\n                              <FormControl\n                                name=\"p_cprice\"\n                                value={\n                                  this.state.p_cprice ? this.state.p_cprice : \"\"\n                                }\n                                onChange={this.handleChange}\n                              />\n                              <InputGroup.Append>\n                                <InputGroup.Text>.00</InputGroup.Text>\n                              </InputGroup.Append>\n                            </InputGroup>\n                          </Form.Group>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col md={6}>\n                          <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Cost Per Unit</Form.Label>\n                            <InputGroup className=\"mb-3\">\n                              <InputGroup.Prepend>\n                                <InputGroup.Text>&#8358;</InputGroup.Text>\n                              </InputGroup.Prepend>\n                              <FormControl\n                                name=\"p_cpu\"\n                                value={this.state.p_cpu ? this.state.p_cpu : \"\"}\n                                onChange={this.handleChange}\n                              />\n                              <InputGroup.Append>\n                                <InputGroup.Text>.00</InputGroup.Text>\n                              </InputGroup.Append>\n                            </InputGroup>\n                          </Form.Group>\n                        </Col>\n                      </Row>\n                    </div>\n                    <div className=\"smallcards\">\n                      <h5>Inventory</h5>\n                      <Row>\n                        <Col md={6}>\n                          <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Stock Keeping Unit (SKU)</Form.Label>\n                            <Form.Control\n                              type=\"text\"\n                              name=\"p_sku\"\n                              value={this.state.p_sku ? this.state.p_sku : \"\"}\n                              onChange={this.handleChange}\n                              placeholder=\"Long sleev t-shirt\"\n                            />\n                          </Form.Group>\n                        </Col>\n\n                        <Col md={6}>\n                          <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control\n                              type=\"number\"\n                              name=\"p_quantity\"\n                              value={\n                                this.state.p_quantity\n                                  ? this.state.p_quantity\n                                  : \"\"\n                              }\n                              onChange={this.handleChange}\n                              placeholder=\"e.g 99\"\n                            />\n                          </Form.Group>\n                        </Col>\n                      </Row>\n                    </div>\n                  </Form>\n                </Col>\n                <Col md={4}>\n                  <div className=\"smallcards\">\n                    <h5>Product Status</h5>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Status</Form.Label>\n                      <Form.Control\n                        name=\"p_status\"\n                        as=\"select\"\n                        onChange={this.handleChange}\n                        defaultValue=\"Choose...\"\n                      >\n                        <option>\n                          {this.state.p_status ? this.state.p_status : \"\"}\n                        </option>\n                        <option>Draft</option>\n                        <option>Active</option>\n                      </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Product Category</Form.Label>\n                      <Form.Control\n                        name=\"p_category\"\n                        as=\"select\"\n                        onChange={this.handleChange}\n                        defaultValue=\"Choose...\"\n                      >\n                        <option>\n                          {this.state.p_category ? this.state.p_category : \"\"}\n                        </option>\n                        {this.state.resultss.map((result, index) => (\n                          <option>{result.title}</option>\n                        ))}\n                      </Form.Control>\n                    </Form.Group>\n\n                    {updateneed === \"true\" && (\n                      <Buttons\n                        name={\"Login\"}\n                        value={\n                          <>\n                            {loading && (\n                              <FontAwesomeIcon\n                                style={{ position: \"relative\", top: \"0px\" }}\n                                icon={faSpinner}\n                                spin\n                              />\n                            )}{\" \"}\n                            {!loading && <> Update Product</>}\n                          </>\n                        }\n                        onClick={() => this.updateProduct()}\n                        placeholder={\"Enter your name\"}\n                        handleChange={this.handleFullName}\n                      />\n                    )}\n                    {updateneed === \"false\" && (\n                      <Buttons\n                        name={\"Login\"}\n                        onClick={() => this.addProduct()}\n                        value={\n                          <>\n                            {loading && (\n                              <FontAwesomeIcon\n                                style={{ position: \"relative\", top: \"0px\" }}\n                                icon={faSpinner}\n                                spin\n                              />\n                            )}{\" \"}\n                            {!loading && <>Add Product</>}\n                          </>\n                        }\n                        placeholder={\"Enter your name\"}\n                        handleChange={this.handleFullName}\n                      />\n                    )}\n                  </div>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </Aux>\n    );\n  }\n}\n\nexport default BasicButton;\n","import React from \"react\";\nimport { Row, Col, Card as Cards, Form, Table } from \"react-bootstrap\";\n\nimport Error from \"../../dashboard/errmessage\";\nimport Good from \"../../dashboard/goodmessage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Buttons from \"../../dashboard/otherbutton\";\nimport {\n  faArrowLeft,\n  faSpinner,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport instance from \"../../authaxios\";\nimport instances from \"../../authaxios\";\nimport Aux from \"../../hoc/_Aux\";\nimport Card from \"../../App/components/MainCard\";\nimport { Link } from \"react-router-dom\";\n\nclass BasicButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false,\n      errmsg: null,\n      good: false,\n      loading: false,\n      gmsg: null,\n      update_id: props.update_id,\n      results: [],\n      selectedFile: null,\n    };\n  }\n  singleFileChangedHandler = (event) => {\n    this.setState({\n      selectedFile: event.target.files[0],\n    });\n  };\n  singleFileUploadHandler = () => {\n    const data = new FormData(); // If file selected\n    this.setState({\n      loading: true,\n    });\n    if (this.state.selectedFile) {\n      data.append(\n        \"profileImage\",\n        this.state.selectedFile,\n        this.state.selectedFile.name\n      );\n\n      instances\n        .post(\"uploadimage/\" + this.state.update_id, data, {\n          headers: {\n            boundary: data._boundary,\n          },\n        })\n        .then((response) => {\n          if (200 === response.status) {\n            // If file size is larger than expected.\n            if (response.data.success === false) {\n              this.setState({ errmsg: response.data.msg });\n              this.setState({ error: true, loading: false });\n\n              this.setState({ good: false });\n            } else {\n              // Success\n              this.setState({ gmsg: response.data.msg });\n              this.resetForm();\n              this.refresh();\n\n              this.setState({ good: true, loading: false });\n\n              this.setState({ error: false });\n            }\n          }\n        })\n        .catch((error) => {\n          // If another error\n          console.log(error);\n        });\n    } else {\n      // if file not selected throw error\n      this.setState({ errmsg: \"No file selected, please upload a file\" });\n      this.setState({ error: true });\n      this.setState({ good: false });\n    }\n  };\n\n  async componentDidMount() {\n    try {\n      let res = await instance.post(\"/productmedia\", {\n        p_id: this.state.update_id,\n      });\n\n      const results = await res.data;\n      this.setState({ results });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  async refresh() {\n    try {\n      let res = await instance.post(\"/productmedia\", {\n        p_id: this.state.update_id,\n      });\n\n      const results = await res.data;\n      this.setState({ results });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  async deleteRecord(id) {\n    try {\n      let res = await instance.post(\"/deleteproductmedia\", {\n        id: id,\n      });\n\n      let result = await res.data;\n      if (result && result.success) {\n        this.setState({ gmsg: result.msg });\n        this.setState({ good: true });\n        this.refresh();\n      } else if (result && result.success === false) {\n        this.setState({ loading: false });\n        this.setState({ errmsg: result.msg });\n        this.setState({ error: true });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  resetForm() {\n    this.setState({\n      selectedFile: null,\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n  render() {\n    const { loading, errmsg, error, good, gmsg } = this.state;\n    return (\n      <Aux>\n        <Row>\n          <Col>\n            <Card\n              title={\n                <div className=\"scaleto\">\n                  <div id=\"oc-alert-container\"></div>\n                  <div className=\"backer\">\n                    <Link onClick={this.props.onClick}>\n                      <FontAwesomeIcon\n                        style={{ fontSize: \"20px\", color: \"#000000\" }}\n                        icon={faArrowLeft}\n                      />\n                    </Link>\n                  </div>{\" \"}\n                  <div style={{ lineHeight: \"30px\", marginLeft: \"10px\" }}>\n                    {\" \"}\n                    Uplaod images for {this.props.p_title}\n                  </div>\n                </div>\n              }\n            >\n              {error && <Error msg={errmsg} />}\n              {good && <Good msg={gmsg} />}\n              <Cards.Body>\n                <div className=\"decenter\">\n                  <h6 className=\"mb-4\" style={{ marginLeft: \"6px\" }}>\n                    {\" \"}\n                    Upload Image: jpeg, jpg, png, gif\n                    <Form\n                      onSubmit={this.handleSubmit}\n                      style={{ position: \"relative\", top: \"2em\" }}\n                    >\n                      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <input\n                          style={{\n                            position: \"relative\",\n                            left: \"0\",\n                            marginLeft: \"-8px\",\n                          }}\n                          onChange={this.singleFileChangedHandler}\n                          type=\"file\"\n                          name=\"file\"\n                        />\n                      </Form.Group>\n\n                      <Buttons\n                        onClick={this.singleFileUploadHandler}\n                        value={\n                          <>\n                            {loading && (\n                              <FontAwesomeIcon\n                                style={{ position: \"relative\", top: \"0px\" }}\n                                icon={faSpinner}\n                                spin\n                              />\n                            )}{\" \"}\n                            {!loading && <> Upload Image</>}\n                          </>\n                        }\n                      />\n                    </Form>\n                  </h6>\n                  <div className=\"row d-flex align-items-center\">\n                    <div className=\"col-9\"></div>\n                  </div>\n                </div>\n              </Cards.Body>\n            </Card>\n            <Cards>\n              <Cards.Header>\n                <Cards.Title as=\"h5\">Item List </Cards.Title>\n              </Cards.Header>\n\n              <Cards.Body>\n                <Table responsive hover>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Image View </th>\n                      <th>Image Link</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.results.map((result, index) => (\n                      <tr>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>\n                          {}\n                          <img\n                            src={\"\" + result.image_link}\n                            width=\"100px\"\n                            alt={\"\" + result.image_link}\n                            height=\"100px\"\n                          />\n                        </td>\n                        <td>{result.image_link}</td>\n\n                        <td>\n                          <div>\n                            <FontAwesomeIcon\n                              onClick={() => this.deleteRecord(result.id)}\n                              className=\"editing\"\n                              icon={faTrashAlt}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </Cards.Body>\n            </Cards>\n          </Col>\n        </Row>\n      </Aux>\n    );\n  }\n}\n\nexport default BasicButton;\n","import React from \"react\";\nimport { Row, Col, Card as Cards, Table } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  faPhotoVideo,\n  faTags,\n  faEdit,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Error from \"../../dashboard/errmessage\";\nimport Good from \"../../dashboard/goodmessage\";\nimport Buttons from \"../../dashboard/otherbutton\";\nimport Aux from \"../../hoc/_Aux\";\nimport Card from \"../../App/components/MainCard\";\nimport instance from \"../../authaxios\";\nimport Add from \"./Add\";\nimport Image from \"./image\";\n\nclass BasicButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewer: \"no\",\n      view: \"\",\n      error: false,\n      errmsg: null,\n      good: false,\n      gmsg: null,\n      update_id: \"\",\n      title: \"\",\n      delete_id: \"\",\n      results: [],\n    };\n  }\n  async componentDidMount() {\n    try {\n      let store_id = localStorage.getItem(\"store_id\");\n      let res = await instance.post(\"/selectproduct\", {\n        store_id: store_id,\n      });\n\n      const results = await res.data;\n      this.setState({ results });\n      if (this.state.results && this.state.results.length > 0) {\n        this.setState({ viewer: \"yes\" });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  async createAdd() {\n    this.setState({ view: \"add\" });\n  }\n  async editRecord(update) {\n    this.setState({ update_id: update, view: \"edit\" });\n  }\n  async upLoad(update, title) {\n    this.setState({ update_id: update, title: title, view: \"upload\" });\n  }\n  async goBack() {\n    this.setState({ view: \"\" });\n    try {\n      let store_id = localStorage.getItem(\"store_id\");\n      let res = await instance.post(\"/selectproduct\", {\n        store_id: store_id,\n      });\n\n      const results = await res.data;\n      this.setState({ results });\n      if (this.state.results && this.state.results.length > 0) {\n        this.setState({ viewer: \"yes\" });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  async deleteRecord(p_id) {\n    try {\n      let res = await instance.post(\"/deleteproduct\", {\n        p_id: p_id,\n      });\n\n      let result = await res.data;\n      if (result && result.success) {\n        this.setState({ gmsg: result.msg });\n        this.setState({ good: true });\n        try {\n          let store_id = localStorage.getItem(\"store_id\");\n          let res = await instance.post(\"/selectproduct\", {\n            store_id: store_id,\n          });\n\n          const results = await res.data;\n          this.setState({ results });\n          if (this.state.results && this.state.results.length > 0) {\n            this.setState({ viewer: \"yes\" });\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      } else if (result && result.success === false) {\n        this.setState({ loading: false });\n        this.setState({ errmsg: result.msg });\n        this.setState({ error: true });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  render() {\n    const { viewer, view, errmsg, error, good, gmsg } = this.state;\n    let store_id = localStorage.getItem(\"store_id\");\n    if (store_id === null) {\n      return <Redirect to=\"/auth/signin\" />;\n    } else {\n      if (viewer === \"yes\" && view === \"\") {\n        return (\n          <Aux>\n            <Row>\n              <Col>\n                <Cards>\n                  <Cards.Header>\n                    <Cards.Title as=\"h5\">Products </Cards.Title>\n                    <span className=\"d-block m-t-5\">\n                      <div\n                        style={{\n                          textAlign: \"right\",\n                          float: \"right\",\n                          alignItems: \"right\",\n                          justifyContent: \"right\",\n                          display: \"inline-flex\",\n                        }}\n                        className=\"leftadd\"\n                      >\n                        <Buttons\n                          name={\"Login\"}\n                          value={\"Add new product\"}\n                          onClick={() => this.createAdd()}\n                          placeholder={\"Enter your name\"}\n                          handleChange={this.handleFullName}\n                        />\n                      </div>\n                    </span>\n                  </Cards.Header>\n                  <Cards.Body>\n                    {error && <Error msg={errmsg} />}\n                    {good && <Good msg={gmsg} />}\n                    <Table responsive hover>\n                      <thead>\n                        <tr>\n                          <th>#</th>\n                          <th>Title</th>\n                          <th>Description</th>\n                          <th>Pricing</th>\n                          <th>Quantity</th>\n                          <th>Status</th>\n\n                          <th>Action</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.results.map((result, index) => (\n                          <tr>\n                            <th scope=\"row\">{index + 1}</th>\n                            <td>{result.p_title}</td>\n                            <td>{result.p_description}</td>\n                            <td>{result.p_price}</td>\n                            <td>{result.p_quantity}</td>\n                            <td>{result.p_status}</td>\n                            <td>\n                              <div>\n                                <FontAwesomeIcon\n                                  className=\"editing\"\n                                  onClick={() => this.editRecord(result.p_id)}\n                                  icon={faEdit}\n                                />\n                                <FontAwesomeIcon\n                                  className=\"editing\"\n                                  onClick={() =>\n                                    this.upLoad(result.p_id, result.p_title)\n                                  }\n                                  icon={faPhotoVideo}\n                                />\n\n                                <FontAwesomeIcon\n                                  onClick={() => this.deleteRecord(result.p_id)}\n                                  className=\"editing\"\n                                  icon={faTrashAlt}\n                                />\n                              </div>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </Table>\n                  </Cards.Body>\n                </Cards>\n              </Col>\n            </Row>\n          </Aux>\n        );\n      } else if (\n        (viewer === \"yes\" && view === \"add\") ||\n        (viewer === \"no\" && view === \"add\")\n      ) {\n        return (\n          <Add\n            head=\"Add Product\"\n            updateneed=\"false\"\n            onClick={() => this.goBack()}\n          />\n        );\n      } else if (\n        (viewer === \"yes\" && view === \"edit\") ||\n        (viewer === \"no\" && view === \"edit\")\n      ) {\n        return (\n          <Add\n            head=\"Add Product\"\n            update_id={this.state.update_id}\n            updateneed=\"true\"\n            onClick={() => this.goBack()}\n          />\n        );\n      } else if (\n        (viewer === \"yes\" && view === \"upload\") ||\n        (viewer === \"no\" && view === \"upload\")\n      ) {\n        return (\n          <Image\n            p_title={this.state.title}\n            update_id={this.state.update_id}\n            updateneed=\"true\"\n            onClick={() => this.goBack()}\n          />\n        );\n      } else if (viewer === \"no\" && view === \"\") {\n        return (\n          <Aux>\n            <Row>\n              <Col>\n                <Card title=\"Products\">\n                  <div className=\"precards\">\n                    <div className=\"preimage\">\n                      <FontAwesomeIcon className=\"precc\" icon={faTags} />\n                    </div>\n                    <h3>Add and manage your products</h3>\n                    <p style={{ color: \"#000000\" }}>\n                      {\" \"}\n                      This is where you’ll add products and manage your pricing.\n                      You can also import and export your product inventory.\n                    </p>\n                    <div className=\"scaleto\">\n                      <Buttons\n                        name={\"Login\"}\n                        value={\"Add Products\"}\n                        onClick={() => this.createAdd()}\n                        placeholder={\"Enter your name\"}\n                        handleChange={this.handleFullName}\n                      />\n                    </div>\n                  </div>\n                </Card>\n              </Col>\n            </Row>\n          </Aux>\n        );\n      }\n    }\n  }\n}\ndocument.title = \"Products | \" + localStorage.getItem(\"username\");\n\nexport default BasicButton;\n"],"sourceRoot":""}