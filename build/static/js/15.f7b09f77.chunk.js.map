{"version":3,"sources":["dashboard/errmessage.js","dashboard/goodmessage.js","App/components/MainCard.js","../node_modules/react-bootstrap/es/Table.js","Demo/Bank/Add.js","Demo/Bank/Default.js"],"names":["Error","props","className","col","msg","Good","icon","faCheckCircle","MainCard","state","isOption","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","Component","windowSize","Table","_React$Component","apply","arguments","_inheritsLoose","prototype","render","_this$props","bsPrefix","striped","bordered","hover","size","variant","responsive","_objectWithoutPropertiesLoose","classes","classNames","table","React","createElement","_extends","responsiveClass","createBootstrapComponent","BasicButton","handleChange","e","preventDefault","target","name","value","store_acc_name","store_bank_name","store_acc_no","error","errmsg","good","gmsg","loading","store_id","localStorage","getItem","instance","post","res","data","result","success","expire","console","log","Row","Col","fontSize","color","faArrowLeft","lineHeight","marginLeft","info","md","Form","onSubmit","handleSubmit","Group","controlId","Label","Control","type","required","onChange","placeholder","pattern","disabled","CreateDiscount","faSpinner","spin","viewer","view","update_id","results","to","Card","scope","faEdit","editRecord","Add","goBack","faMoneyCheckAlt","createAdd","document"],"mappings":"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","file":"static/js/15.f7b09f77.chunk.js","sourcesContent":["import React from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\n\nconst Error = (props) => {\n  return (\n    <div className=\"errormessage\">\n      <Grid>\n        <Cell col={2}>\n          <div className=\"center\">\n            <div className=\"errcircle\">!</div>\n          </div>\n        </Cell>\n        <Cell col={10}>\n          <p>{props.msg}</p>\n        </Cell>\n      </Grid>\n    </div>\n  );\n};\nexport default Error;\n","import React from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Good = (props) => {\n  return (\n    <div className=\"goodmessage\">\n      <Grid>\n        <Cell col={2}>\n          <div className=\"center\">\n            <div className=\"goodcircle\">\n              <FontAwesomeIcon icon={faCheckCircle} />\n            </div>\n          </div>\n        </Cell>\n        <Cell col={10}>\n          <p>{props.msg}</p>\n        </Cell>\n      </Grid>\n    </div>\n  );\n};\nexport default Good;\n","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Table, _React$Component);\n\n  function Table() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Table.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        striped = _this$props.striped,\n        bordered = _this$props.bordered,\n        hover = _this$props.hover,\n        size = _this$props.size,\n        variant = _this$props.variant,\n        responsive = _this$props.responsive,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n    var classes = classNames(bsPrefix, className, variant && bsPrefix + \"-\" + variant, size && bsPrefix + \"-\" + size, striped && bsPrefix + \"-striped\", bordered && bsPrefix + \"-bordered\", hover && bsPrefix + \"-hover\");\n    var table = React.createElement(\"table\", _extends({}, props, {\n      className: classes\n    }));\n\n    if (responsive) {\n      var responsiveClass = bsPrefix + \"-responsive\";\n\n      if (typeof responsive === 'string') {\n        responsiveClass = responsiveClass + \"-\" + responsive;\n      }\n\n      return React.createElement(\"div\", {\n        className: responsiveClass\n      }, table);\n    }\n\n    return table;\n  };\n\n  return Table;\n}(React.Component);\n\nexport default createBootstrapComponent(Table, 'table');","import React from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\n\nimport instance from \"../../authaxios\";\nimport Error from \"../../dashboard/errmessage\";\nimport Good from \"../../dashboard/goodmessage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Buttons from \"../../dashboard/otherbutton\";\nimport { faArrowLeft, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Aux from \"../../hoc/_Aux\";\nimport Card from \"../../App/components/MainCard\";\nimport { Link } from \"react-router-dom\";\n\nclass BasicButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      store_acc_name: \"\",\n      store_bank_name: \"\",\n      store_acc_no: \"\",\n      error: false,\n      errmsg: null,\n      good: false,\n      gmsg: null,\n      loading: false,\n    };\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n  async componentDidMount() {\n    try {\n      let store_id = localStorage.getItem(\"store_id\");\n      let res = await instance.post(\"/displaybank\", {\n        store_id: store_id,\n      });\n\n      let result = await res.data;\n      if (result && result.success) {\n        this.setState({\n          store_acc_name: result.store_acc_name,\n          store_bank_name: result.store_bank_name,\n          store_acc_no: result.store_acc_no,\n          expire: result.expire,\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  resetForm() {\n    this.setState({\n      store_acc_name: \"\",\n      store_bank_name: \"\",\n      store_acc_no: \"\",\n    });\n  }\n  handleChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n  async CreateDiscount() {\n    this.setState({ loading: true });\n    if (\n      this.state.store_acc_name !== \"\" &&\n      this.state.store_bank_name !== \"\" &&\n      this.state.store_acc_no !== \"\"\n    ) {\n      try {\n        let store_id = localStorage.getItem(\"store_id\");\n        let res = await instance.post(\"/updatebank\", {\n          store_id: store_id,\n          store_acc_name: this.state.store_acc_name,\n          store_bank_name: this.state.store_bank_name,\n          store_acc_no: this.state.store_acc_no,\n        });\n\n        let result = await res.data;\n\n        if (result && result.success) {\n          this.setState({ loading: false });\n          this.setState({ gmsg: result.msg });\n          this.setState({ good: true });\n          this.setState({ error: false });\n          try {\n            let store_id = localStorage.getItem(\"store_id\");\n            let res = await instance.post(\"/displaybank\", {\n              store_id: store_id,\n            });\n\n            let result = await res.data;\n            if (result && result.success) {\n              this.setState({\n                store_acc_name: result.store_acc_name,\n                store_bank_name: result.store_bank_name,\n                store_acc_no: result.store_acc_no,\n              });\n            }\n          } catch (e) {\n            console.log(e);\n          }\n        } else if (result && result.success === false) {\n          this.setState({ loading: false });\n          this.setState({ errmsg: result.msg });\n          this.setState({ error: true });\n          this.setState({ good: false });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      this.setState({ loading: false });\n      this.setState({ errmsg: \"Please Fill out your form Correctly\" });\n      this.setState({ error: true });\n    }\n  }\n  render() {\n    const { loading, error, errmsg, good, gmsg } = this.state;\n    return (\n      <Aux>\n        <Row>\n          <Col>\n            <Card\n              title={\n                <div className=\"scaleto\">\n                  <div className=\"backer\">\n                    <Link onClick={this.props.onClick}>\n                      <FontAwesomeIcon\n                        style={{ fontSize: \"20px\", color: \"#000000\" }}\n                        icon={faArrowLeft}\n                      />\n                    </Link>\n                  </div>{\" \"}\n                  <div style={{ lineHeight: \"30px\", marginLeft: \"10px\" }}>\n                    {\" \"}\n                    {this.props.info}\n                  </div>\n                </div>\n              }\n            >\n              <Row>\n                <Col md={8}>\n                  {error && <Error msg={errmsg} />}\n                  {good && <Good msg={gmsg} />}\n                  <div className=\"smallcards\">\n                    <Form onSubmit={this.handleSubmit}>\n                      <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Account Name</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          required\n                          name=\"store_acc_name\"\n                          value={\n                            this.state.store_acc_name\n                              ? this.state.store_acc_name\n                              : \"\"\n                          }\n                          onChange={this.handleChange}\n                          placeholder=\"Lightweb Technology Limited\"\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Bank Name</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          required\n                          name=\"store_bank_name\"\n                          value={\n                            this.state.store_bank_name\n                              ? this.state.store_bank_name\n                              : \"\"\n                          }\n                          onChange={this.handleChange}\n                          placeholder=\"Guaranty Trust Bank\"\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Account No</Form.Label>\n                        <Form.Control\n                          type=\"number\"\n                          name=\"store_acc_no\"\n                          pattern={([0 - 9], 10)}\n                          value={\n                            this.state.store_acc_no\n                              ? this.state.store_acc_no\n                              : \"\"\n                          }\n                          onChange={this.handleChange}\n                          required\n                          placeholder=\"0449797541\"\n                        />\n                      </Form.Group>\n\n                      <Buttons\n                        disabled={this.state.loading}\n                        name={\"Login\"}\n                        onClick={() => this.CreateDiscount()}\n                        value={\n                          <>\n                            {loading && (\n                              <FontAwesomeIcon\n                                style={{ position: \"relative\", top: \"0px\" }}\n                                icon={faSpinner}\n                                spin\n                              />\n                            )}{\" \"}\n                            {!loading && <> {this.props.info}</>}\n                          </>\n                        }\n                      />\n                    </Form>\n                  </div>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </Aux>\n    );\n  }\n}\n\nexport default BasicButton;\n","import React from \"react\";\nimport { Row, Col, Card as Cards, Table } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faMoneyCheckAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Buttons from \"../../dashboard/otherbutton\";\nimport { Redirect } from \"react-router-dom\";\nimport Aux from \"../../hoc/_Aux\";\nimport Add from \"./Add\";\nimport instance from \"../../authaxios\";\nimport Card from \"../../App/components/MainCard\";\n\nclass BasicButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      store_acc_name: \"\",\n      store_bank_name: \"\",\n      store_acc_no: \"\",\n      viewer: \"no\",\n      view: \"\",\n      error: false,\n      errmsg: null,\n      good: false,\n      gmsg: null,\n      update_id: \"\",\n      results: [],\n    };\n  }\n  async componentDidMount() {\n    try {\n      let store_id = localStorage.getItem(\"store_id\");\n      let res = await instance.post(\"/displaybank\", {\n        store_id: store_id,\n      });\n\n      let result = await res.data;\n      if (result && result.success) {\n        this.setState({\n          store_acc_name: result.store_acc_name,\n          store_bank_name: result.store_bank_name,\n          store_acc_no: result.store_acc_no,\n          expire: result.expire,\n        });\n        if (this.state.store_acc_name && this.state.store_acc_no !== \"\") {\n          this.setState({ viewer: \"yes\" });\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async createAdd() {\n    this.setState({ view: \"add\" });\n  }\n  async editRecord() {\n    this.setState({ view: \"edit\" });\n  }\n  async goBack() {\n    this.setState({ view: \"\" });\n    try {\n      let store_id = localStorage.getItem(\"store_id\");\n      let res = await instance.post(\"/displaybank\", {\n        store_id: store_id,\n      });\n\n      let result = await res.data;\n      if (result && result.success) {\n        this.setState({\n          store_acc_name: result.store_acc_name,\n          store_bank_name: result.store_bank_name,\n          store_acc_no: result.store_acc_no,\n          expire: result.expire,\n        });\n        if (this.state.store_acc_name && this.state.store_acc_no !== \"\") {\n          this.setState({ viewer: \"yes\" });\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  render() {\n    const { viewer, view } = this.state;\n    let store_id = localStorage.getItem(\"store_id\");\n    if (store_id === null) {\n      return <Redirect to=\"/auth/signin\" />;\n    } else {\n      if (viewer === \"yes\" && view === \"\") {\n        return (\n          <Aux>\n            <Row>\n              <Col>\n                <Cards>\n                  <Cards.Header>\n                    <Cards.Title as=\"h5\">Bank Information </Cards.Title>\n                    <span className=\"d-block m-t-5\"></span>\n                  </Cards.Header>\n                  <Cards.Body>\n                    <Table responsive hover>\n                      <thead>\n                        <tr>\n                          <th>#</th>\n                          <th>Account Name</th>\n                          <th>Bank Name</th>\n                          <th>Account No</th>\n                          <th>Action</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <th scope=\"row\">1</th>\n                          <td>{this.state.store_acc_name}</td>\n                          <td>{this.state.store_bank_name}</td>\n                          <td>{this.state.store_acc_no}</td>\n                          <td>\n                            {\" \"}\n                            <>\n                              <FontAwesomeIcon\n                                className=\"editing\"\n                                icon={faEdit}\n                                onClick={() => this.editRecord()}\n                              />\n                            </>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </Table>\n                  </Cards.Body>\n                </Cards>\n              </Col>\n            </Row>\n          </Aux>\n        );\n      } else if (\n        (viewer === \"yes\" && view === \"add\") ||\n        (viewer === \"no\" && view === \"add\")\n      ) {\n        return <Add info=\"Insert Bank Info\" onClick={() => this.goBack()} />;\n      } else if (\n        (viewer === \"yes\" && view === \"edit\") ||\n        (viewer === \"no\" && view === \"edit\")\n      ) {\n        return <Add info=\"Update Bank Info\" onClick={() => this.goBack()} />;\n      } else {\n        return (\n          <Aux>\n            <Row>\n              <Col>\n                <Card title=\"Bank Information\">\n                  <div className=\"precards\">\n                    <div className=\"preimage\">\n                      <FontAwesomeIcon\n                        className=\"precc\"\n                        icon={faMoneyCheckAlt}\n                      />\n                    </div>\n                    <h3>Customer Bank Information</h3>\n                    <p style={{ color: \"#000000\" }}>\n                      {\" \"}\n                      This is where you’ll add your bank details. Any payment\n                      you received will be saved on your wallet and will be sent\n                      to this Bank Account\n                    </p>\n                    <div className=\"scaleto\">\n                      <Buttons\n                        name={\"Login\"}\n                        onClick={() => this.createAdd()}\n                        value={\"Add Account Info\"}\n                      />\n                    </div>\n                  </div>\n                </Card>\n              </Col>\n            </Row>\n          </Aux>\n        );\n      }\n    }\n  }\n}\ndocument.title = \"Bank | \" + localStorage.getItem(\"username\");\nexport default BasicButton;\n"],"sourceRoot":""}